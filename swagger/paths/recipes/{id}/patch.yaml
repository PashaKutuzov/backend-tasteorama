tags:
  - Recipes
summary: Update recipe
operationId: updateRecipe
description: Update recipe by ID
security:
  - bearerAuth: []
parameters:
  - in: path
    name: id
    required: true
    schema:
      type: string
      example: '681b6a51254a7a7996d15746'
    description: The unique identifier of the recipe to be updated.

requestBody:
  required: true
  content:
    multipart/form-data:
      schema:
        type: object
        required:
          - title
          - category
          - instructions
          - description
          - ingredients
        properties:
          title:
            type: string
            description: The full name of the recipe
            example: 'Breakfast Omelette'

          category:
            type: string
            description: The full name of the category
            enum:
              - Seafood
              - Lamb
              - Starter
              - Chicken
              - Beef
              - Dessert
              - Vegan
              - Pork
              - Vegetarian
              - Miscellaneous
              - Pasta
              - Breakfast
              - Side
              - Goat
              - Soup
            example: 'Breakfast'

          area:
            type: string
            description: The cuisine area (e.g. Italian, Mexican)
            example: 'Italian'

          instructions:
            type: string
            description: Preparation steps
            example: 'Crack the eggs and beat with a fork...'

          description:
            type: string
            description: Short description of the recipe
            example: 'A light and fluffy omelette perfect for breakfast.'

          thumb:
            type: string
            format: binary
            description: Optional recipe image file

          time:
            type: string
            description: Time needed to prepare the recipe
            example: '30 min'

          cals:
            type: number
            description: Calories per portion
            example: 250

          ingredients:
            type: array
            description: List of ingredients with their measures
            minItems: 1
            items:
              type: object
              required:
                - id
                - measure
              properties:
                id:
                  type: string
                  description: Ingredient ID (MongoDB ObjectId)
                  example: '64a1b2c3e25d8c90e88d5678'
                measure:
                  type: string
                  description: Quantity and unit of the ingredient
                  example: '2 tbsp'

responses:
  '200':
    description: Successfully updated recipe
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
            - data
          properties:
            status:
              type: integer
              example: 200
            message:
              type: string
              example: Successfully patched a recipe!
            data:
              $ref: '../../../components/schemas/recipe.yaml'

  '401':
    $ref: '../../../components/responses/401.yaml'

  '404':
    description: Recipe not found
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
          properties:
            status:
              type: integer
              example: 404
            message:
              type: string
              example: Recipe not found

  '500':
    $ref: '../../../components/responses/500.yaml'
